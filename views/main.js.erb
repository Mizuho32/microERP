window.onload = ()=>{
  $data = {};
  $data.forminputs = Array.from(document.querySelectorAll('.form-inputs'));
  $data.startV     = document.querySelector('#startV')
  $data.speechbox  = document.querySelector('#speechbox')
  $data.recognition = null;

<% if autostart then %>
  setTimeout(startDictation, 500);
<% end %>
};

function vchk(e) {
  if (e.checked)
    startDictation(); 
  else
    $data.recognition.stop();
}

function move(step) {
  let i = $data.forminputs.indexOf(document.activeElement);
  if (i !== -1) {
    $data.forminputs[(i+step)%($data.forminputs.length)].focus();
  }
}

function trap(text) {
  console.log(`trap ${text}`);

  let el = document.activeElement;
  switch(text) {
    case "<%= commands[:next_form] %>":
      move(+1);
      break;
    case "<%= commands[:previous_form] %>":
      move(-1);
      break;
    case "<%= commands[:delete_text] %>":
      if (el.getAttribute('class') === "form-inputs")
        el.value = "";
      break;
    case "<%= commands[:submit] %>":
      document.querySelector('#input-submit').click();
      break;
    case "<%= commands[:save] %>":
      document.querySelector('#input-save').click();
      break;
<% form_names.each do |k, v| %>
    case "<%= v %>":
      document.querySelector("#input-<%= k %>").focus();
      break;
<% end %>
    default:
      if (el.getAttribute('class') === "form-inputs")
        el.value = text;
      break;
  }
}

function startDictation() {

  let recognition = null;
  if (window.hasOwnProperty('webkitSpeechRecognition'))
    recognition = new webkitSpeechRecognition();
  else
    recognition = SpeechRecognition.SpeechRecognition();

  $data.recognition = recognition;

  if (!(recognition===null)) {
    console.log('main');

    recognition.continuous = false;
    recognition.interimResults = false;
    recognition.lang = "<%= lang %>";
    recognition.start();

    recognition.onsoundstart = ()=>{
      console.log("sound start");
      $data.speechbox.classList.remove("audioend");
      $data.speechbox.classList.add("audiostart");
    };

    recognition.onsoundend = ()=>{
      console.log("sound end");
      $data.speechbox.classList.remove("audiostart");
      $data.speechbox.classList.add("audioend");
    };

    recognition.onresult = (e)=>{
      let text = e.results[0][0].transcript
      console.log('results');
      document.getElementById('transcript').value = text;

      trap(text);
    };

    recognition.onerror = (e)=>{
      console.log(e);
    }

    recognition.onend = ()=>{
      console.log("end");
      if ($data.startV.checked)
        recognition.start();
    }
  }
}
